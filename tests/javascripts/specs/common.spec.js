// Generated by CoffeeScript 1.3.3
(function() {

  describe('Common Jacket implementation', function() {
    var anonymous, obj;
    obj = {
      method: function() {
        return 'method';
      },
      prop: 'prop'
    };
    anonymous = function() {
      return false;
    };
    describe('Jacket ( Object )', function() {
      beforeEach(function() {
        return this.w = J(obj);
      });
      it('should return new object', function() {
        this.w.should.not.eq(obj);
        return this.w.should.be.instanceOf(Object);
      });
      it('should copy origin object property', function() {
        this.w.should.have.ownProperty('prop');
        this.w.prop.should.equal(obj.prop);
        this.w.prop = false;
        return obj.prop.should.be.ok;
      });
      return it('should wrap origin object methods', function() {
        this.w.should.have.ownProperty('method');
        this.w.method.toString().should.not.eq(obj.method.toString());
        return this.w.method.should.match(Helpers.wrapped_function);
      });
    });
    return describe('Jacket ( \'MyFunc\', function ) ', function() {
      return it('should give the name to anonymous function', function() {
        this.w = J('Myfunc', anonymous);
        return console.log("NAME", this.w.name);
      });
    });
  });

}).call(this);
