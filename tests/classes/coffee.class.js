// Generated by CoffeeScript 1.4.0
(function() {
  var CoffeeClass, ExtendedCoffeeClass,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  CoffeeClass = (function() {

    CoffeeClass.static_method = function() {
      return 'static_method';
    };

    CoffeeClass.static_property = 'static_property';

    CoffeeClass.prototype.received = {};

    function CoffeeClass(id) {
      if (id == null) {
        id = 1;
      }
      this.binded_method = __bind(this.binded_method, this);

      this.id = id;
      this.method_defined_in_constructor = function() {
        return 'method_defined_in_constructor';
      };
    }

    CoffeeClass.prototype.prototype_method = function() {
      var _ref;
      this.created_in_prototype_method = ((_ref = this.created_in_prototype_method) != null ? _ref : this.created_in_prototype_method = 0) + 1;
      return 'prototype_method';
    };

    CoffeeClass.prototype.test = function() {
      return 'called_from_constructor';
    };

    CoffeeClass.prototype.binded_method = function() {
      return 'binded_method';
    };

    CoffeeClass.prototype.parent_method = function() {
      return 'parent_method';
    };

    return CoffeeClass;

  })();

  ExtendedCoffeeClass = (function(_super) {

    __extends(ExtendedCoffeeClass, _super);

    ExtendedCoffeeClass.static_method = function() {
      return 'static_method';
    };

    ExtendedCoffeeClass.static_method_2 = function() {
      return 'static_method_2';
    };

    ExtendedCoffeeClass.static_property = 'static_property';

    ExtendedCoffeeClass.prototype.received = {};

    function ExtendedCoffeeClass(id) {
      if (id == null) {
        id = 2;
      }
      this.binded_method = __bind(this.binded_method, this);

      ExtendedCoffeeClass.__super__.constructor.apply(this, arguments);
      this.id = id;
    }

    ExtendedCoffeeClass.prototype.prototype_method = function() {
      var _ref;
      this.created_in_prototype_method = ((_ref = this.created_in_prototype_method) != null ? _ref : this.created_in_prototype_method = 0) + 1;
      return 'prototype_method';
    };

    ExtendedCoffeeClass.prototype.test = function() {
      return 'called_from_constructor';
    };

    ExtendedCoffeeClass.prototype.binded_method = function() {
      return 'binded_method';
    };

    return ExtendedCoffeeClass;

  })(CoffeeClass);

  this.CoffeeClass = CoffeeClass;

  this.ExtendedCoffeeClass = ExtendedCoffeeClass;

}).call(this);
